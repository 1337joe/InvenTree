# Checks for each PR

name: PR checks

on:
  push:
    branches-ignore:
      - l10*

  pull_request:
    branches-ignore:
      - l10*

env:
  python_version: 3.7
  node_version: 16

  server_start_sleep: 60

  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  INVENTREE_DB_ENGINE: sqlite3
  INVENTREE_DB_NAME: inventree
  INVENTREE_MEDIA_ROOT: ./media
  INVENTREE_STATIC_ROOT: ./static


jobs:

  check_version:
    name: version number
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Check version number
        run: |
          python3 ci/check_version_number.py --branch ${{ github.base_ref }}

  pep_style:
    name: PEP style (python)
    needs: check_version
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Python ${{ env.python_version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.python_version }}
      - name: Install deps
        run: |
          pip install flake8==3.8.3
          pip install pep8-naming==0.11.1
      - name: flake8
        run: |
          flake8 InvenTree

  javascript:
    name: javascript template files
    needs: pep_style
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Install node.js ${{ env.node_version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.node_version }}
      - run: npm install
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.python_version }}
      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install gettext
          pip3 install invoke
          invoke install
          invoke static
      - name: Check Templated Files
        run: |
          cd ci
          python check_js_templates.py
      - name: Lint Javascript Files
        run: |
          invoke render-js-files
          npx eslint js_tmp/*.js

  html:
    name: html template files
    needs: pep_style
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Install node.js ${{ env.node_version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.node_version }}
      - run: npm install
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.python_version }}
      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install gettext
          pip3 install invoke
          invoke install
          invoke static
      - name: Check HTML Files
        run: |
          npx markuplint InvenTree/build/templates/build/*.html
          npx markuplint InvenTree/company/templates/company/*.html
          npx markuplint InvenTree/order/templates/order/*.html
          npx markuplint InvenTree/part/templates/part/*.html
          npx markuplint InvenTree/stock/templates/stock/*.html
          npx markuplint InvenTree/templates/*.html
          npx markuplint InvenTree/templates/InvenTree/*.html
          npx markuplint InvenTree/templates/InvenTree/settings/*.html

  python:
    name: python bindings
    needs: pep_style
    runs-on: ubuntu-latest

    env:
      wrapper_name: inventree-python

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Install InvenTree
        run: |
          sudo apt-get update
          sudo apt-get install python3-dev python3-pip python3-venv
          pip3 install invoke
          invoke install
          invoke migrate
      - name: Download Python Code
        run: |
          git clone --depth 1 https://github.com/inventree/${{ env.wrapper_name }} ./${{ env.wrapper_name }}
      - name: Start Server
        run: |
          invoke import-records -f ./${{ env.wrapper_name }}/test/test_data.json
          invoke server -a 127.0.0.1:8000 &
          sleep ${{ env.server_start_sleep }}
      - name: Run Tests
        run: |
          cd ${{ env.wrapper_name }}
          invoke test
